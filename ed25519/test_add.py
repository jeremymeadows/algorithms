P = 2**255 - 19

def modp_inv(x):
    return pow(x, P-2, P)

# Curve constant
D = -121665 * modp_inv(121666) % P

def point_add(self: (int, int, int, int), other: (int, int, int, int)) -> (int, int, int, int):
    a = (self[1] - self[0]) * (other[1] - other[0]) % P
    b = (self[1] + self[0]) * (other[1] + other[0]) % P
    c = 2 * self[3] * other[3] * D % P
    d = 2 * self[2] * other[2] % P

    e = b - a
    f = d - c
    g = d + c
    h = b + a

    return (e * f, g * h, f * g, e * h)

print(P, '\n', D, '\n')
print(point_add(
    (
        -296018569523652896372234514327709550206908554287152058624460862838859047041084022801327206127550044265769833862414983365876661076483822655155324979117350,
        1490495321877056891969153563203901731061912970822103855338626923326930450369546055809989262026333609603664456667855626969875010168057827705323189208562226,
        -472268759938110625622824785352915578001432258900265237190564369304728646195033505047516790369922900318679953813930015786830629522119352625245844870504700,
        934244079836156744814377949647390897099953823983631381324122244125069081065138972390096358496487455289554769813310888065787613665947803319614067579747813,
    ),
    (0,1,1,0)
))


# point_add as a rust function:

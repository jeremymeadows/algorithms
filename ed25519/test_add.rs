use num_bigint::BigInt;
use std::str::FromStr;

fn main() {
    let P: BigInt = BigInt::from(2).pow(255u32) - 19;
    let D: BigInt = BigInt::from(121666).modpow(&(P.clone() - 2), &P) - 1;

    let point_add = |p: (BigInt, BigInt, BigInt, BigInt), q: (BigInt, BigInt, BigInt, BigInt)| -> (BigInt, BigInt, BigInt, BigInt) {
        let a = (p.1.clone() - p.0.clone()) * (q.1.clone() - q.0.clone()) % &P;
        let b = (p.1 + p.0) * (q.1 + q.0) % &*P;
        let c: BigInt = 2 * p.3 * q.3 * &*D % &*P;
        let d: BigInt = 2 * p.2 * q.2 % &*P;

        let e = b.clone() - a.clone();
        let f = d.clone() - c.clone();
        let g = d + c;
        let h = b + a;
        (e.clone() * f.clone(), g.clone() * h.clone(), f * g, e * h)
    };

    println!("{}\n{}", *P, *D);
    // println!("{:#?}", 
    //     Point { x: BigInt::from_str("-296018569523652896372234514327709550206908554287152058624460862838859047041084022801327206127550044265769833862414983365876661076483822655155324979117350").unwrap(), y: BigInt::from_str("1490495321877056891969153563203901731061912970822103855338626923326930450369546055809989262026333609603664456667855626969875010168057827705323189208562226").unwrap(), z: BigInt::from_str("-472268759938110625622824785352915578001432258900265237190564369304728646195033505047516790369922900318679953813930015786830629522119352625245844870504700").unwrap(), t: BigInt::from_str("934244079836156744814377949647390897099953823983631381324122244125069081065138972390096358496487455289554769813310888065787613665947803319614067579747813").unwrap() }
    //     + Point { x: BigInt::zero(), y: BigInt::one(), z: BigInt::one(), t: BigInt::zero() }
    // );
    println!("{:#?}", point_add(
        (
            BigInt::from_str("-296018569523652896372234514327709550206908554287152058624460862838859047041084022801327206127550044265769833862414983365876661076483822655155324979117350").unwrap(),
            BigInt::from_str("1490495321877056891969153563203901731061912970822103855338626923326930450369546055809989262026333609603664456667855626969875010168057827705323189208562226").unwrap(),
            BigInt::from_str("-472268759938110625622824785352915578001432258900265237190564369304728646195033505047516790369922900318679953813930015786830629522119352625245844870504700").unwrap(),
            BigInt::from_str("934244079836156744814377949647390897099953823983631381324122244125069081065138972390096358496487455289554769813310888065787613665947803319614067579747813").unwrap(),
        ),
        (BigInt::zero(), BigInt::one(), BigInt::one(), BigInt::zero())
    ));
}